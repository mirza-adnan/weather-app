!function(){const e=document.querySelector(".search-bar"),t=document.querySelector(".search-button"),a=document.querySelector(".location"),n=document.querySelector(".condition").querySelector("span"),o=document.querySelector(".temperature").querySelector("span"),r=document.querySelector(".wind").querySelector("span"),c=document.querySelector(".feels-like").querySelector(".fl-value"),s=document.querySelector(".humidity").querySelector("span"),i=document.querySelector(".pressure").querySelector("span"),u=document.querySelector(".condition").querySelector("i"),d=document.querySelector(".weather-left"),l=document.querySelector(".weather-right"),m=document.querySelector(".line");async function f(e){try{const t=`https://api.openweathermap.org/data/2.5/weather?q=${e}&appid=34fbec596ce6ee0a4ef569154cebd76e&units=metric`,a=await fetch(t,{mode:"cors"});if(a.ok)return await a.json();throw new Error("")}catch(e){console.clear(),alert("Cannot find location")}}function y(e){d.classList.add("fade"),l.classList.add("fade"),m.classList.add("elongate"),a.textContent=e.name,n.textContent=e.weather[0].main,o.textContent=String(Math.round(Number(e.main.temp))),r.textContent=`${e.wind.speed} m/s`,c.textContent=String(Math.round(Number(e.main.feels_like))),s.textContent=`${e.main.humidity}%`,i.textContent=`${e.main.pressure} hPa`,function(e){switch(e){case"Clear":u.className="far fa-sun";break;case"Rain":u.className="fas fa-cloud-showers-heavy";break;case"Clouds":u.className="fas fa-cloud";break;case"Drizzle":u.className="fas fa-cloud-rain";break;case"Thunderstorm":u.className="fas fa-cloud-showers-heavy";break;case"Snow":u.className="fas fa-snowflake";break;case"Haze":u.className="fas fa-smog"}}(e.weather[0].main)}[d,l].forEach((e=>{e.addEventListener("animationend",(()=>{e.classList.remove("fade")}))})),m.addEventListener("animationend",(()=>{m.classList.remove("elongate")})),window.addEventListener("DDOMContentLoaded",async function(){navigator.geolocation?navigator.geolocation.getCurrentPosition((async e=>{const t=e.coords.longitude,a=`https://api.openweathermap.org/data/2.5/weather?lat=${e.coords.latitude}&lon=${t}&appid=34fbec596ce6ee0a4ef569154cebd76e&units=metric`,n=await fetch(a,{mode:"cors"});y(await n.json())})):y(await f("Dhaka"))}()),t.addEventListener("click",(async function(){if(e.value){const t=e.value;e.value="";const a=await f(t);a&&y(a)}})),window.addEventListener("keydown",(function(a){document.activeElement===e&&"Enter"===a.key&&e.value&&t.click()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,